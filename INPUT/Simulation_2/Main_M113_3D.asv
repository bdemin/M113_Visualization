clear variables; close all;%clc
%% Add paths
MainFolder='D:\Gilad\2018\M113_DBD_3D';% write the name of the main folder
addpath(genpath(MainFolder));%Add path of all the subfolder in the main folder
Gravity = [-9.807, -9.807, -9.807].*[sin(0.0) 0 cos(0.0)];%[m/s2] gravity in x,y,z axis
NumSpring = 63;% [Int] - Number of links(Spring) in track system
NumWheels = 7;% [Int] - Number of wheels in track system
NumRoadWheels = 5;% [Int] - Number of roadwheel per side

%% Bodies and forces Properties
Wheel = Wheel_Propertis(Gravity,NumWheels);% Generate properties of wheels
[Chassis,Chassis_Side] = Chassis_Propertis(Gravity);% Generate properties of chassis
Struct(1:2) = Struct_Properties(Chassis_Side,Wheel,NumRoadWheels);% Generate properties of struct
Spring = Spring_Properties(Chassis_Side,NumRoadWheels);% Generate properties of spring
Tursion(1:2) = Tursion_Properties();% Generate properties of tursion spring
Rotation = RotationMatrix_Properties();% Generate properties of Chassis RotationMatrix

%% Track
Contact_RoadWheels(1:2) = ContactRoadWheels_Properties(NumSpring,NumWheels);% Generate properties of Contact Track - RoadWheels
Contact_Sprocket(1:2) = ContactSprocket_Properties(NumSpring);% Generate properties of Contact Track - Sprocket
Contact_SideForce(1:2) = ContactSideForce_Properties(NumSpring);% Generate properties of Contact Track - Chassis (Side force)
Track_Spring(1:2) = TrackSpring_Properties(NumSpring);% Generate properties of  Track Spring properties
Track_Ground(1:2) = TrackGround_Properties(NumSpring);% Generate properties of Contact Track - Ground
Track_InternalDamping(1:2) = TrackInternalDamping_Properties(NumSpring);% Generate properties of Track Internal damping
SupportRollers = SupportRollers_Properties(NumSpring,Chassis.CG(1:3));% Generate properties of Contact Track - RoadWheels
[Track] = Track_Properties(Wheel,Gravity,NumSpring); % Generate properties of track
Numeric = Numeric_Properties(); % Generate properties of numeric integrator
Ground = Ground_Properties();% % Generate properties of 2d and 3d ground surface
Rock = Rock_Properties(NumSpring);% Generate Rocks
[Animation] = Function_AnimationPreferences(MainFolder);% Animation Preferences

%% Mex Files variables
% setenv('MW_MINGW64_LOC','C:\TDM-GCC-64')
% mex crossprod.cpp


%% Update
EngineMoment = zeros(1,2);% Initial
SaveDate_Index = 1;% Initial
rad2sec_rpm = 9.5492965964254;% [Real] Convert rad2sec to rpm ratio
SaveTime = 0;
tic
Numeric.h = 2e-4;
Flag_h = 0;
Step_h = 0;
Run_Time = 25;
sum1 =0;
[Data_Chassis,Data_Wheel1,Data_Wheel2,Data_Tursion1,Data_Tursion2,Data_Track1,Data_Track2,Time] = Preallocate_Data_Save(Run_Time,NumSpring);
while Numeric.t < Run_Time
    Flag_Tension = (Track_Spring(1).Ratio + Track_Spring(2).Ratio)>0;
    sum1 = sum1+ Flag_Tension;
    for i = 1:2 % Run 2 side
         Numeric.h = 3e-4;

         [Track_Spring(i)] = TrackSpring_Update(Track_Spring(i),Track(i).CG,Track(i).Num_Springs,Numeric,Chassis);% Update Track spring
          [Track(i).Force] = TrackForce_Update(Track(i),Contact_RoadWheels(i),Contact_Sprocket(i),Contact_SideForce(i),...
                Track_Spring(i),Track_Ground(i),Track_InternalDamping(i),Rock);% Update - All Discrete link force
           [Track(i)] = TrackKinematic_Update(Track(i),Numeric);% Update Track Kinematic
    end
    if Numeric.t < 2  Numeric.t < 2 || Flag_Tension > 0
        Numeric.h = 3e-4;
        flag = 1;
        tStart = tic;
    else
         Numeric.h = 6e-4;
        flag = 2;
    end
    if mod(Numeric.Frame,flag) == 0
        for i = 1:2 % Run 2 side
%             Numeric.h = 5e-4;

            %% Update Chassis Forces
            [Struct(i),Chassis_Side(i),Wheel(i)] = Struct_Update(Struct(i),Chassis.RotInvarse_ZYX,Chassis_Side(i),Wheel(i),...
                Numeric);% Update - Struct Force
            [Tursion(i),Wheel(i).ForceWorld(2:6,:),Chassis_Side(i).PureMoment,Chassis_Side(i).ForceWorld(1:5,:)] = ...
                Tursion_Update(Tursion(i),Struct(i),Chassis,Chassis_Side(i).ForceWorld(1:5,:),Wheel(i).ForceWorld(2:6,:),Numeric);% Update - Tursion Force
            %         [Spring(i),Chassis,Chassis_Side(i),Wheel(i)] = Spring_Update(Spring(i),Struct(i),Chassis,Chassis_Side(i),Wheel(i),Numeric);% Update - Spring Force
            
            %% Update Track Forces
%             [Track_Spring(i)] = TrackSpring_Update(Track_Spring(i),Track(i).CG,Track(i).Num_Springs,Numeric,Chassis);% Update Track spring
            [Contact_RoadWheels(i),Track(i),Wheel(i)] = ContactRoadWheels_Update(Contact_RoadWheels(i),Track(i),Wheel(i),Numeric);% Update Contact_RoadWheels Force
            [Contact_Sprocket(i),Track(i),Wheel(i)] = ContactSprocket_Update(Contact_Sprocket(i),Track(i),Wheel(i),Chassis,Numeric);% Update Contact_Sprocket Force
            [Contact_SideForce(i),Chassis_Side(i)] = ContactSideForce_Update(Contact_SideForce(i),Chassis,Chassis_Side(i),Track(i),Numeric);% Update Side force
            [Track_Ground(i),Track(i),Ground] = TrackGround_Update(Track_Ground(i),Track(i),Chassis,Numeric,Ground,Wheel(i).Velocity_World(7,5),i);% Update Track - Ground forces
            %         [SupportRollers(i),Track(i)] = SupportRollers_Update(SupportRollers(i),Track(i),Chassis,Numeric);% Update RetainingWheels
            %                  [Track_InternalDamping(i),Fz] = TrackInternalDamping_Update(Track_InternalDamping(i),Track(i),Track_Ground(i),Track_Spring(i),...
            %                              Chassis);
            %
%             [Track(i).Force] = TrackForce_Update(Track(i),Contact_RoadWheels(i),Contact_Sprocket(i),Contact_SideForce(i),...
%                 Track_Spring(i),Track_Ground(i),Track_InternalDamping(i),Rock);% Update - All Discrete link force
%             [Track(i)] = TrackKinematic_Update(Track(i),Numeric);% Update Track Kinematic
            [EngineMoment(i)] = Control_Update(Wheel(i).Sprocket_AngularVelocity(2),Numeric.t,i);%% Update Control
        end
        %% Solve Bodies Kinematic
        [Chassis,Chassis_Side,Wheel,SupportRollers] = ...
            Bodies_Update(Chassis,Chassis_Side,Wheel,SupportRollers,EngineMoment,Track_Ground,Numeric);%Update Kinematic
    end
    %% SAVE DATA
    if mod(Numeric.Frame,50) == 0
        tStart = tic;
        % Chassis
        V1 = Chassis.Rot_ZYX * [-0.9312;-0.625;0];
        CG(SaveDate_Index,:) = [Chassis.CG(1) + V1(1) Chassis.CG(2) + V1(2)];
        
        V2 = Chassis.Rot_ZYX * [-0.5312;0.625;0];
        CG2(SaveDate_Index,:) = [Chassis.CG(1) + V2(1) Chassis.CG(2) + V2(2)];
        
        [Data_Chassis(SaveDate_Index,:)] = DataSave_Chassis(Chassis);% Save Chassis data;
        [Data_Wheel1(SaveDate_Index,:),Data_Wheel2(SaveDate_Index,:)] = DataSave_Wheel(Wheel(1),Wheel(2));% Save Road wheel data
        [Data_Tursion1(SaveDate_Index,:),Data_Tursion2(SaveDate_Index,:)] = DataSave_TursionSpring(Tursion(1),Tursion(2));% Save Tursion data
        [Data_Track1(SaveDate_Index,:),Data_Track2(SaveDate_Index,:)] = DataSave_TrackKinematic(Track(1),Track(2));
        Data_Length(SaveDate_Index,:) = (sum(Track_Spring(1).Delta_Last) + sum(Track_Spring(2).Delta_Last))/2;
        Data_Spring1(SaveDate_Index,:) = Spring(1).FT;
        Data_Spring2(SaveDate_Index,:) = Spring(2).FT;
        Data_Struct1(SaveDate_Index,:) = Struct(1).FT;
        Data_Struct2(SaveDate_Index,:) = Struct(2).FT;
        Track_vx(SaveDate_Index,:) = Track(1).Velocity_World(:,1)';
        Track_vy(SaveDate_Index,:) = Track(1).Velocity_World(:,2)';
        Track_vz(SaveDate_Index,:) = Track(1).Velocity_World(:,3)';
        Track_flag(SaveDate_Index,:) = Track_Ground(1).Flag';
        Moment(SaveDate_Index,:) = [Track_Ground(1).Chassis_Moment(3) Track_Ground(2).Chassis_Moment(3)  Chassis_Side(1).TrackMoment(3)...
            Chassis_Side(2).TrackMoment(3) Chassis.Moment(3)];
        TrackGround_F1(SaveDate_Index,:) = sum(Track_Ground(1).Force);
        TrackGround_F2(SaveDate_Index,:) = sum(Track_Ground(2).Force);
        Sprocket_Moment1(SaveDate_Index,:) = Wheel(1).Moment(7,:);
        Sprocket_Moment2(SaveDate_Index,:) = Wheel(2).Moment(7,:);
        Data_Engine(SaveDate_Index,:) = EngineMoment;
        HP(SaveDate_Index,:) = EngineMoment.*[Wheel(1).Velocity_World(7,5) Wheel(2).Velocity_World(7,5)] * 1.34;
        W(SaveDate_Index,:) = [Wheel(1).Velocity_World(7,5) Wheel(2).Velocity_World(7,5)];
        Data_Wheel_Moment(SaveDate_Index,:) = [Wheel(1).Sprocket_Moment Wheel(2).Sprocket_Moment];
        StructData.Idler_X(SaveDate_Index,:) = Struct(1).Delta_Last(15);
        StructData.Sprocket_X(SaveDate_Index,:) = Struct(1).Delta_Last(12);
        Time(SaveDate_Index,:) = Numeric.t;%[s] time
        Data_MaxSpringFT(SaveDate_Index,:) = max(max(Track_Spring(1).FT), max(Track_Spring(2).FT));
        Data_MaxGroundDelta(SaveDate_Index,:) = -min(min(Track_Ground(1).Delta_Last), max(Track_Ground(2).Delta_Last));
        Data_MaxGroundFT(SaveDate_Index,:) = -min(min(Track_Ground(1).FT), max(Track_Ground(2).FT));
        Force_Mag1 = sqrt(sum(Track_Spring(1).Force(:,1).* Track_Spring(1).Force(:,1) + ...
            Track_Spring(1).Force(:,2).* Track_Spring(1).Force(:,2) +Track_Spring(1).Force(:,3).* Track_Spring(1).Force(:,3), 3));
        Force_Mag2 = sqrt(sum(Track_Spring(2).Force(:,1).* Track_Spring(2).Force(:,1) + ...
            Track_Spring(2).Force(:,2).* Track_Spring(2).Force(:,2) +Track_Spring(2).Force(:,3).* Track_Spring(2).Force(:,3), 3));
        Data_MaxSpringForce(SaveDate_Index,:) = max(max(Force_Mag1), max(Force_Mag2));
        Ratio(SaveDate_Index,:) = [Track_Spring(1).Ratio Track_Spring(2).Ratio];
        
        SaveDate_Index = SaveDate_Index + 1;% Update
        tElapsed = toc(tStart);
        SaveTime = SaveTime + tElapsed;
    end
    %% Drawing
    if mod(Numeric.Frame,2*550) == 0
        Drawing_2D(Chassis,Chassis_Side,Wheel,Spring,Track,Contact_Sprocket,Track_Ground,Ground,Animation,Rock,...
            SupportRollers); % Initial drawing
        Numeric.t
        
    end
    Numeric.Frame = Numeric.Frame + 1;
   
    Numeric.t = Numeric.t + Numeric.h/flag;
end
toc
tElapsed = toc(tStart);
% Animation_3D (Data_Chassis,Data_Wheel1,Data_Wheel2,Data_Track1,Data_Track2,Ground,Struct(1),Chassis_Side(1).Points_BC,...
%     Chassis_Side(2).Points_BC,Time)
% a = (Data_Chassis(:,7).^2 + Data_Chassis(:,8).^2).^0.5;
%% Plot and comperison
%PlotResults(Time,Data_Chassis,Data_Wheel1,Data_Tursion1,StructData,Numeric,Chassis)


%     for W_n = 1:2
%     Ground_Force = Track_Ground(W_n).Force;
%     Ground_Force = (Chassis.RotInvarse_ZYX * Ground_Force')';
%     Ground_Force(:,[1,3]) = 0;
%     Ground_Force = (Chassis.Rot_ZYX * Ground_Force')';
%     A = Contact_RoadWheels(W_n).WheelContact;
%     W_Force = Wheel(W_n).ForceWorld(:,1:3);
%     for num = 1:7
%         Flag = A(:,num);
%         W_Force(num,1:3) = W_Force(num,1:3) + sum([Flag,Flag,Flag].*Ground_Force);
%         sum([Flag,Flag,Flag].*Ground_Force);
%     end
%     Wheel(W_n).ForceWorld(:,1:3) = W_Force;
%     end

